// Code generated by qtc from "nginx.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line nginx.qtpl:1
package templates

//line nginx.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line nginx.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line nginx.qtpl:1
func StreamNginx(qw422016 *qt422016.Writer, portNo string) {
//line nginx.qtpl:1
	qw422016.N().S(`


worker_processes  1;

events {
  worker_connections  1024;
}

http {
  server {
    listen `)
//line nginx.qtpl:12
	qw422016.E().S(portNo)
//line nginx.qtpl:12
	qw422016.N().S(`;
    server_name  localhost;

    root   /usr/share/nginx/html;
    index  index.html index.htm;
    include /etc/nginx/mime.types;

    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}

`)
//line nginx.qtpl:30
}

//line nginx.qtpl:30
func WriteNginx(qq422016 qtio422016.Writer, portNo string) {
//line nginx.qtpl:30
	qw422016 := qt422016.AcquireWriter(qq422016)
//line nginx.qtpl:30
	StreamNginx(qw422016, portNo)
//line nginx.qtpl:30
	qt422016.ReleaseWriter(qw422016)
//line nginx.qtpl:30
}

//line nginx.qtpl:30
func Nginx(portNo string) string {
//line nginx.qtpl:30
	qb422016 := qt422016.AcquireByteBuffer()
//line nginx.qtpl:30
	WriteNginx(qb422016, portNo)
//line nginx.qtpl:30
	qs422016 := string(qb422016.B)
//line nginx.qtpl:30
	qt422016.ReleaseByteBuffer(qb422016)
//line nginx.qtpl:30
	return qs422016
//line nginx.qtpl:30
}
