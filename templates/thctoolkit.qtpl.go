// Code generated by qtc from "thctoolkit.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line thctoolkit.qtpl:1
package templates

//line thctoolkit.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line thctoolkit.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line thctoolkit.qtpl:1
func StreamThcToolKit(qw422016 *qt422016.Writer, cloudRunBranching string, answer2 string, globalPort string, answer4_final string, answer5 string, includeEnvFile string, ansEnvFile string) {
//line thctoolkit.qtpl:1
	qw422016.N().S(`
# Copyright 2021 The Hacker Collective, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: thcdeployment

on:
  push:
    branches: [ `)
//line thctoolkit.qtpl:20
	qw422016.E().S(cloudRunBranching)
//line thctoolkit.qtpl:20
	qw422016.N().S(` ]
jobs:
  build:
    name: Cloud Run Deployment
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@master

      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: |
          gcloud auth configure-docker
      
      `)
//line thctoolkit.qtpl:42
	if includeEnvFile == "Yes" {
//line thctoolkit.qtpl:42
		qw422016.N().S(`
      - name: Add and Write environment file
        run: |
          touch .env
            `)
//line thctoolkit.qtpl:46
		qw422016.N().S(ansEnvFile)
//line thctoolkit.qtpl:46
		qw422016.N().S(`
            cat .env
      `)
//line thctoolkit.qtpl:48
	}
//line thctoolkit.qtpl:48
	qw422016.N().S(`
      - name: Build
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/`)
//line thctoolkit.qtpl:51
	qw422016.E().S(answer2)
//line thctoolkit.qtpl:51
	qw422016.N().S(`:latest .
          
      - name: Push
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/`)
//line thctoolkit.qtpl:55
	qw422016.E().S(answer2)
//line thctoolkit.qtpl:55
	qw422016.N().S(`:latest

      - name: Deploy
        run: |
          gcloud run deploy `)
//line thctoolkit.qtpl:59
	qw422016.E().S(answer2)
//line thctoolkit.qtpl:59
	qw422016.N().S(` \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --port `)
//line thctoolkit.qtpl:61
	qw422016.E().S(globalPort)
//line thctoolkit.qtpl:61
	qw422016.N().S(` \
          --region `)
//line thctoolkit.qtpl:62
	qw422016.E().S(answer4_final)
//line thctoolkit.qtpl:62
	qw422016.N().S(` \
          --service-account ${{ secrets.GCP_SA_EMAIL }}
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/`)
//line thctoolkit.qtpl:64
	qw422016.E().S(answer2)
//line thctoolkit.qtpl:64
	qw422016.N().S(` \
          --platform managed \
          --`)
//line thctoolkit.qtpl:66
	qw422016.E().S(answer5)
//line thctoolkit.qtpl:66
	qw422016.N().S(` \
          --quiet
          
`)
//line thctoolkit.qtpl:69
}

//line thctoolkit.qtpl:69
func WriteThcToolKit(qq422016 qtio422016.Writer, cloudRunBranching string, answer2 string, globalPort string, answer4_final string, answer5 string, includeEnvFile string, ansEnvFile string) {
//line thctoolkit.qtpl:69
	qw422016 := qt422016.AcquireWriter(qq422016)
//line thctoolkit.qtpl:69
	StreamThcToolKit(qw422016, cloudRunBranching, answer2, globalPort, answer4_final, answer5, includeEnvFile, ansEnvFile)
//line thctoolkit.qtpl:69
	qt422016.ReleaseWriter(qw422016)
//line thctoolkit.qtpl:69
}

//line thctoolkit.qtpl:69
func ThcToolKit(cloudRunBranching string, answer2 string, globalPort string, answer4_final string, answer5 string, includeEnvFile string, ansEnvFile string) string {
//line thctoolkit.qtpl:69
	qb422016 := qt422016.AcquireByteBuffer()
//line thctoolkit.qtpl:69
	WriteThcToolKit(qb422016, cloudRunBranching, answer2, globalPort, answer4_final, answer5, includeEnvFile, ansEnvFile)
//line thctoolkit.qtpl:69
	qs422016 := string(qb422016.B)
//line thctoolkit.qtpl:69
	qt422016.ReleaseByteBuffer(qb422016)
//line thctoolkit.qtpl:69
	return qs422016
//line thctoolkit.qtpl:69
}
