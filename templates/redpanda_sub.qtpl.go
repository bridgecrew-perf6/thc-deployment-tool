// Code generated by qtc from "redpanda_sub.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line redpanda_sub.qtpl:1
package templates

//line redpanda_sub.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line redpanda_sub.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line redpanda_sub.qtpl:1
func StreamRedpandaSubscribe(qw422016 *qt422016.Writer, appName string, redpandaTopic string) {
//line redpanda_sub.qtpl:1
	qw422016.N().S(`
const { Kafka } = require('kafkajs')
const { v4 } = require('uuid')
require("dotenv").config()

const kafka = new Kafka({
  clientId: '`)
//line redpanda_sub.qtpl:7
	qw422016.E().S(appName)
//line redpanda_sub.qtpl:7
	qw422016.N().S(`',
  brokers: [process.env.BROKER_URL1, process.env.BROKER_URL2, process.env.BROKER_URL3],

})


async function sub() {

  const consumer = kafka.consumer({ groupId: '`)
//line redpanda_sub.qtpl:15
	qw422016.E().S(appName)
//line redpanda_sub.qtpl:15
	qw422016.N().S(`' + v4() })

  await consumer.connect()

  await consumer.subscribe({ topic: '`)
//line redpanda_sub.qtpl:19
	qw422016.E().S(redpandaTopic)
//line redpanda_sub.qtpl:19
	qw422016.N().S(`', fromBeginning: true })

  let msgCount = 0

  await consumer.run({
    eachMessage: async ({ topic, partition, message }) => {
      msgCount++
      console.log({
        topic: topic,
        key: message.key.toString(),
        value: JSON.parse(message.value.toString()),
        offset: message.offset,
        count: msgCount
      })
    },
  })

}

sub()

`)
//line redpanda_sub.qtpl:40
}

//line redpanda_sub.qtpl:40
func WriteRedpandaSubscribe(qq422016 qtio422016.Writer, appName string, redpandaTopic string) {
//line redpanda_sub.qtpl:40
	qw422016 := qt422016.AcquireWriter(qq422016)
//line redpanda_sub.qtpl:40
	StreamRedpandaSubscribe(qw422016, appName, redpandaTopic)
//line redpanda_sub.qtpl:40
	qt422016.ReleaseWriter(qw422016)
//line redpanda_sub.qtpl:40
}

//line redpanda_sub.qtpl:40
func RedpandaSubscribe(appName string, redpandaTopic string) string {
//line redpanda_sub.qtpl:40
	qb422016 := qt422016.AcquireByteBuffer()
//line redpanda_sub.qtpl:40
	WriteRedpandaSubscribe(qb422016, appName, redpandaTopic)
//line redpanda_sub.qtpl:40
	qs422016 := string(qb422016.B)
//line redpanda_sub.qtpl:40
	qt422016.ReleaseByteBuffer(qb422016)
//line redpanda_sub.qtpl:40
	return qs422016
//line redpanda_sub.qtpl:40
}
