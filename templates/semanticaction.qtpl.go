// Code generated by qtc from "semanticaction.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line semanticaction.qtpl:1
package templates

//line semanticaction.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line semanticaction.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line semanticaction.qtpl:1
func StreamSemanticbranch(qw422016 *qt422016.Writer, semanticBranch string) {
//line semanticaction.qtpl:1
	qw422016.N().S(`
# Copyright 2021 The Hacker Collective, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: semanticrelease

on:
  push:
    branches: [ `)
//line semanticaction.qtpl:20
	qw422016.E().S(semanticBranch)
//line semanticaction.qtpl:20
	qw422016.N().S(` ]

jobs:
  semantic-release:
	runs-on: ubuntu-latest
	steps:
		- name : Checkout
	      uses: actions/checkout@master
	    - name: Semantic Release
	      uses: cycjimmy/semantic-release-action@v2
		  env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     		NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
`)
//line semanticaction.qtpl:33
}

//line semanticaction.qtpl:33
func WriteSemanticbranch(qq422016 qtio422016.Writer, semanticBranch string) {
//line semanticaction.qtpl:33
	qw422016 := qt422016.AcquireWriter(qq422016)
//line semanticaction.qtpl:33
	StreamSemanticbranch(qw422016, semanticBranch)
//line semanticaction.qtpl:33
	qt422016.ReleaseWriter(qw422016)
//line semanticaction.qtpl:33
}

//line semanticaction.qtpl:33
func Semanticbranch(semanticBranch string) string {
//line semanticaction.qtpl:33
	qb422016 := qt422016.AcquireByteBuffer()
//line semanticaction.qtpl:33
	WriteSemanticbranch(qb422016, semanticBranch)
//line semanticaction.qtpl:33
	qs422016 := string(qb422016.B)
//line semanticaction.qtpl:33
	qt422016.ReleaseByteBuffer(qb422016)
//line semanticaction.qtpl:33
	return qs422016
//line semanticaction.qtpl:33
}
